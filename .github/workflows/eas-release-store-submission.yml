name: EAS Build and Store Submission

on:
  release:
    types: [published]          # Only submit to stores when release is published
  workflow_dispatch:            # Manual trigger for testing
    inputs:
      submit_to_stores:
        description: 'Submit to app stores after building?'
        required: true
        default: false
        type: boolean
      testing_mode:
        description: 'Use testing profiles (safe - internal tracks only)?'
        required: true
        default: true
        type: boolean
      platform:
        description: 'Platform to build for'
        required: true
        default: 'all'
        type: choice
        options:
        - android
        - ios
        - all

jobs:
  build-and-submit:
    name: Build and Submit to Stores
    runs-on: ubuntu-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "‚ùå EXPO_TOKEN secret is required. Please ask the unfoldingword account manager to add it."
            echo "üìñ Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Release information
        id: release-info
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "üéâ Release triggered: ${{ github.event.release.tag_name }}"
            echo "üìã Release name: ${{ github.event.release.name }}"
            echo "üè™ Will submit to app stores after building"

            # Extract version from tag (remove 'v' prefix if present)
            VERSION="${{ github.event.release.tag_name }}"
            VERSION=${VERSION#v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "üì± App version: ${VERSION}"
          else
            echo "üîß Manual workflow triggered"
            echo "üè™ Store submission: ${{ github.event.inputs.submit_to_stores }}"
            echo "üß™ Testing mode: ${{ github.event.inputs.testing_mode }}"
            echo "version=manual" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update app version (for releases)
        if: github.event_name == 'release'
        run: |
          echo "üì± Updating app version to ${{ steps.release-info.outputs.version }}"

          # Update app.json version
          node -e "
            const fs = require('fs');
            const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));
            appJson.expo.version = '${{ steps.release-info.outputs.version }}';

            // Auto-increment build numbers
            const currentBuild = parseInt(appJson.expo.android?.versionCode || '1');
            const currentIosBuild = parseInt(appJson.expo.ios?.buildNumber || '1');

            if (!appJson.expo.android) appJson.expo.android = {};
            if (!appJson.expo.ios) appJson.expo.ios = {};

            appJson.expo.android.versionCode = currentBuild + 1;
            appJson.expo.ios.buildNumber = (currentIosBuild + 1).toString();

            fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2));

            console.log('‚úÖ Updated version to:', appJson.expo.version);
            console.log('‚úÖ Android versionCode:', appJson.expo.android.versionCode);
            console.log('‚úÖ iOS buildNumber:', appJson.expo.ios.buildNumber);
          "

          # Update package.json version
          npm version ${{ steps.release-info.outputs.version }} --no-git-tag-version

          echo "‚úÖ Version updates completed"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Determine build platform
        id: platform
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "platform=all" >> $GITHUB_OUTPUT
            echo "üè≠ Building for ALL platforms (release)"
          else
            echo "platform=${{ github.event.inputs.platform }}" >> $GITHUB_OUTPUT
            echo "üîß Building for ${{ github.event.inputs.platform }} (manual)"
          fi

      - name: Create production build
        id: build
        run: |
          echo "üöÄ Creating production build..."
          echo "Platform: ${{ steps.platform.outputs.platform }}"

          # Add release notes to build metadata
          if [[ "${{ github.event_name }}" == "release" ]]; then
            BUILD_MESSAGE="Release ${{ github.event.release.tag_name }}: ${{ github.event.release.name }}"
          else
            BUILD_MESSAGE="Manual build - $(date +'%Y-%m-%d %H:%M:%S')"
          fi

          eas build \
            --platform ${{ steps.platform.outputs.platform }} \
            --profile production \
            --message "${BUILD_MESSAGE}" \
            --non-interactive

      - name: Submit to App Store (iOS)
        if: |
          (github.event_name == 'release') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.submit_to_stores == 'true')
        run: |
          if [[ "${{ steps.platform.outputs.platform }}" == "ios" || "${{ steps.platform.outputs.platform }}" == "all" ]]; then
            echo "üçé Submitting to App Store Connect..."

            # Determine submit profile based on testing mode
            if [[ "${{ github.event_name }}" == "release" ]]; then
              SUBMIT_PROFILE="production"
              SUBMIT_MESSAGE="Release ${{ github.event.release.tag_name }}"
              echo "üì± Using PRODUCTION profile (public release)"
            elif [[ "${{ github.event.inputs.testing_mode }}" == "true" ]]; then
              SUBMIT_PROFILE="testing"
              SUBMIT_MESSAGE="Testing build - $(date +'%Y-%m-%d %H:%M:%S')"
              echo "üß™ Using TESTING profile (internal only - SAFE)"
            else
              SUBMIT_PROFILE="production"
              SUBMIT_MESSAGE="Manual production build - $(date +'%Y-%m-%d %H:%M:%S')"
              echo "üì± Using PRODUCTION profile (public release)"
            fi

            eas submit --platform ios --profile ${SUBMIT_PROFILE} --message "${SUBMIT_MESSAGE}" --non-interactive
          else
            echo "‚è≠Ô∏è Skipping iOS submission (not building iOS)"
          fi

      - name: Submit to Google Play (Android)
        if: |
          (github.event_name == 'release') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.submit_to_stores == 'true')
        run: |
          if [[ "${{ steps.platform.outputs.platform }}" == "android" || "${{ steps.platform.outputs.platform }}" == "all" ]]; then
            echo "ü§ñ Submitting to Google Play Store..."

            # Determine submit profile based on testing mode
            if [[ "${{ github.event_name }}" == "release" ]]; then
              SUBMIT_PROFILE="production"
              SUBMIT_MESSAGE="Release ${{ github.event.release.tag_name }}"
              echo "üì± Using PRODUCTION profile (public release)"
            elif [[ "${{ github.event.inputs.testing_mode }}" == "true" ]]; then
              SUBMIT_PROFILE="testing"
              SUBMIT_MESSAGE="Testing build - $(date +'%Y-%m-%d %H:%M:%S')"
              echo "üß™ Using TESTING profile (internal track - SAFE)"
            else
              SUBMIT_PROFILE="production"
              SUBMIT_MESSAGE="Manual production build - $(date +'%Y-%m-%d %H:%M:%S')"
              echo "üì± Using PRODUCTION profile (public release)"
            fi

            eas submit --platform android --profile ${SUBMIT_PROFILE} --message "${SUBMIT_MESSAGE}" --non-interactive
          else
            echo "‚è≠Ô∏è Skipping Android submission (not building Android)"
          fi

      - name: Update release with build info
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üìù Adding build information to release..."

          # Get current release body
          CURRENT_BODY="${{ github.event.release.body }}"

          # Add build information
          BUILD_INFO="

          ---

          ## üöÄ Build Information

          **App Version:** ${{ steps.release-info.outputs.version }}
          **Build Date:** $(date +'%Y-%m-%d %H:%M:%S UTC')
          **Platform:** ${{ steps.platform.outputs.platform }}
          **EAS Profile:** production

          ### üì± Download Links
          - **EAS Dashboard:** https://expo.dev/accounts/unfoldingword/projects/obs-app
          - **App Store Connect:** https://appstoreconnect.apple.com (pending review)
          - **Google Play Console:** https://play.google.com/console (pending review)

          ### üîß Technical Details
          - **Commit:** ${{ github.sha }}
          - **Workflow:** ${{ github.workflow }}
          - **Build ID:** Available in EAS dashboard after completion
          "

          # Update the release with build info
          gh release edit ${{ github.event.release.tag_name }} \
            --notes "${CURRENT_BODY}${BUILD_INFO}"

      - name: Submission summary
        if: |
          (github.event_name == 'release') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.submit_to_stores == 'true')
        run: |
          echo "üéâ Store submission completed!"
          echo ""
          echo "üìä Submission Details:"
          echo "  Platform: ${{ steps.platform.outputs.platform }}"
          echo "  Trigger: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "  Release: ${{ github.event.release.tag_name }}"
            echo "  Version: ${{ steps.release-info.outputs.version }}"
            echo "  Profile: PRODUCTION (public release)"
          elif [[ "${{ github.event.inputs.testing_mode }}" == "true" ]]; then
            echo "  Profile: TESTING (internal only - safe)"
          else
            echo "  Profile: PRODUCTION (public release)"
          fi
          echo ""
          echo "üì± Monitor submissions:"
          echo "  EAS Dashboard: https://expo.dev/accounts/unfoldingword/projects/obs-app"
          echo "  App Store Connect: https://appstoreconnect.apple.com"
          echo "  Google Play Console: https://play.google.com/console"

      - name: Build-only summary
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.submit_to_stores == 'false')
        run: |
          echo "üéâ Production build completed!"
          echo ""
          echo "üìä Build Details:"
          echo "  Platform: ${{ steps.platform.outputs.platform }}"
          echo "  Profile: production"
          echo "  Store submission: Skipped (manual override)"
          echo ""
          echo "üì± Download builds: https://expo.dev/accounts/unfoldingword/projects/obs-app"
          echo ""
          echo "üí° To submit to stores later:"
          echo "  1. Go to EAS dashboard"
          echo "  2. Find this build"
          echo "  3. Click 'Submit' for desired platform"
